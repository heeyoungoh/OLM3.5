package xbolt.custom.daelim.dlmc.web;


import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

import xbolt.cmm.controller.XboltController;
import xbolt.cmm.framework.handler.MessageHandler;
import xbolt.cmm.framework.util.ExceptionUtil;
import xbolt.cmm.framework.util.StringUtil;
import xbolt.cmm.framework.val.GlobalVal;
import xbolt.cmm.service.CommonService;

import com.rathontech2018.sso.sp.agent.web.WebAgent;


/**
 * @Class Name : DLMCActionController.java
 * @Description : DLMCActionController.java
 * @Modification Information
 * @수정일		수정자		 수정내용
 * @---------	---------	-------------------------------
 * @2023. 09. 19. smartfactory		최초생성
 *
 * @since 2023. 09. 19.
 * @version 1.0
 * @see
 */

@Controller
@SuppressWarnings("unchecked")
public class DLMCActionController extends XboltController{
	private final Log _log = LogFactory.getLog(this.getClass());

	@Resource(name = "commonService")
	private CommonService commonService;
	
	@RequestMapping(value="/custom/dlmc/logindlmcForm.do")
	public String logindlmcForm(ModelMap model, HashMap cmmMap, HttpServletRequest request) throws Exception {
	  model=setLoginScrnInfo(model,cmmMap);
	  model.put("screenType", cmmMap.get("screenType"));
	  model.put("mainType", cmmMap.get("mainType"));
	  model.put("srID", cmmMap.get("srID"));
	  model.put("sysCode", cmmMap.get("sysCode"));
	  model.put("proposal", cmmMap.get("proposal"));
	  model.put("status", cmmMap.get("status"));
	  
	  return nextUrl("/custom/daelim/dlmc/login");
	}
	
	
		
	@RequestMapping(value="/custom/dlmc/logindlmc.do")
	public String logindlmc(ModelMap model, HashMap cmmMap, HttpServletRequest request) throws Exception {
		try {
			HttpSession session = request.getSession(true);
			Map resultMap = new HashMap();
			String langCode = GlobalVal.DEFAULT_LANG_CODE;	
			String languageID = StringUtil.checkNull(cmmMap.get("LANGUAGE"),StringUtil.checkNull(cmmMap.get("LANGUAGEID")) );
			if(languageID.equals("")){
				languageID = GlobalVal.DEFAULT_LANGUAGE;
			}
		
			cmmMap.put("LANGUAGE", languageID);
			String ref = request.getHeader("referer");
			String protocol = request.isSecure() ? "https://" : "http://";
			
			String IS_CHECK = GlobalVal.PWD_CHECK;
			String url_CHECK = StringUtil.chkURL(ref, protocol);

			if("".equals(IS_CHECK))
				IS_CHECK = "Y";
			
			
			if("".equals(url_CHECK)) {
				resultMap.put(AJAX_SCRIPT, "parent.fnReload('N')");
				resultMap.put(AJAX_ALERT, "Your ID does not exist in our system. Please contact system administrator(DAESANG).");
			}
			else {

				Map idInfo = new HashMap();
				
				if("Y".equals(IS_CHECK) && "login".equals(url_CHECK)) {
					cmmMap.put("IS_CHECK", "Y");
				}
				else {
					cmmMap.put("IS_CHECK", "N");
				}
				
				idInfo = commonService.select("login_SQL.login_id_select", cmmMap);
			
				if(idInfo == null || idInfo.size() == 0) {
					resultMap.put(AJAX_SCRIPT, "parent.fnReload('N')");
					//resultMap.put(AJAX_ALERT, "해당아이디가 존재하지 않습니다.");
					resultMap.put(AJAX_ALERT, MessageHandler.getMessage(langCode + ".WM00002"));				
				}
				else {
					cmmMap.put("LOGIN_ID", idInfo.get("LoginId")); // parameter LOGIN_ID 는 사번이므로 조회한 LOGINID로 put
					Map loginInfo = commonService.select("login_SQL.login_select", cmmMap);
					if(loginInfo == null || loginInfo.size() == 0) {
						resultMap.put(AJAX_SCRIPT, "parent.fnReload('N')");
						//resultMap.put(AJAX_ALERT, "System에 해당 사용자 정보가 없습니다.등록 요청바랍니다.");
						resultMap.put(AJAX_ALERT, MessageHandler.getMessage(langCode + ".WM00102"));					
					}
					else {
						// [Authority] < 4 인 경우, 수정가능하게 변경
						if(loginInfo.get("sessionAuthLev").toString().compareTo("4") < 0)	loginInfo.put("loginType", "editor");
						else	loginInfo.put("loginType", "viewer");	
						resultMap.put(AJAX_SCRIPT, "parent.fnReload('Y')");
						//resultMap.put(AJAX_MESSAGE, "Login성공");					
						session.setAttribute("loginInfo", loginInfo);
					}
				}
				model.put("loginIdx", StringUtil.checkNull(cmmMap.get("loginIdx"))); //singleSignOn 구분
				model.put("screenType", StringUtil.checkNull(cmmMap.get("screenType")));
			    model.put("mainType", StringUtil.checkNull(cmmMap.get("mainType")));
			    model.put("srID", StringUtil.checkNull(cmmMap.get("srID")));
			    model.put("sysCode", StringUtil.checkNull(cmmMap.get("sysCode")));
				model.addAttribute(AJAX_RESULTMAP,resultMap);
			}
		}
		catch (Exception e) {
			if(_log.isInfoEnabled()){_log.info("LoginActionController::loginbase::Error::"+e);}
			throw new ExceptionUtil(e.toString());
		}
		return nextUrl(AJAXPAGE);
	}
	
	private ModelMap setLoginScrnInfo(ModelMap model,HashMap cmmMap) throws Exception {
		  
	  String pass = StringUtil.checkNull(cmmMap.get("pwd"));
	  model.addAttribute("loginid",StringUtil.checkNull(cmmMap.get("loginid"), ""));
	  model.addAttribute("pwd",pass);
	  model.addAttribute("lng",StringUtil.checkNull(cmmMap.get("lng"), ""));
	  
	  if(_log.isInfoEnabled()){_log.info("setLoginScrnInfo : loginid="+StringUtil.checkNull(cmmMap.get("loginid"))+",pass"+URLEncoder.encode(pass)+",lng="+StringUtil.checkNull(cmmMap.get("lng")));}		  
	  List langList = commonService.selectList("common_SQL.langType_commonSelect", cmmMap);
	  if( langList!=null &&langList.size() > 0){
		  for(int i=0; i<langList.size();i++){
			  Map langInfo = (HashMap) langList.get(i);
			  if(langInfo.get("IsDefault").equals("1")){
				  model.put("langType", StringUtil.checkNull(langInfo.get("CODE"),""));
				  model.put("langName", StringUtil.checkNull(langInfo.get("NAME"),""));
			  }
		  }
	  }else{model.put("langType", "");model.put("langName", "");}
	  model.put("langList", langList);
	  model.put("loginIdx", StringUtil.checkNull(cmmMap.get("loginIdx"))); //singleSignOn 구분
	  return model;
 	}	
	
	@RequestMapping(value="/custom/indexDLMC.do")
	public String indexDLMC(Map cmmMap,ModelMap model, HttpServletRequest request, HttpServletResponse response) throws Exception {
		try{			
			
			HttpSession session = request.getSession(true);
			// 환경설정 시작
			String SSO_URL	= "https://gw.daelimcloudtest.com";
			// 환경설정 끝

			// 기본변수 끝
			String ssoEmp = "";
			String olmI = "";

			// 인증 시작
			WebAgent agent = new WebAgent(); //agent 호출
			agent.requestAuthentication(request, response);
			
			ssoEmp = StringUtil.checkNull(session.getAttribute("RathonSSO_PERSON_NO"));
			
			// ssoEmp 없으면 sso 로그인 페이지 
			if(!"".equals(ssoEmp) && ssoEmp != null){
				if(agent.requestAuthentication(request, response,false)){
					//인증처리 필요 (DL 그룹웨어로 이동)
					if(!response.isCommitted()) {
						//response.sendRedirect(SSO_URL);
					}
				} else {
					//SSO 인증완료
					olmI = ssoEmp;
				}
			}
			
			model.put("olmI",olmI);
			model.put("screenType", StringUtil.checkNull(cmmMap.get("screenType"),""));
			model.put("mainType", StringUtil.checkNull(cmmMap.get("mainType"),""));
			model.put("srID", StringUtil.checkNull(cmmMap.get("srID"),""));
			model.put("sysCode", StringUtil.checkNull(cmmMap.get("sysCode"),""));
			model.put("proposal", StringUtil.checkNull(cmmMap.get("proposal"),""));
			model.put("status", StringUtil.checkNull(cmmMap.get("status"),""));
			
			
		}catch (Exception e) {
			if(_log.isInfoEnabled()){_log.info("DLMCActionController::mainpage::Error::"+e);}
			throw new ExceptionUtil(e.toString());
		}		
		return nextUrl("/indexDLMC");
	}
	
	@RequestMapping(value="/mainHomeDLMC.do")
	public String mainHomeDLMC(HttpServletRequest request, Map cmmMap,ModelMap model) throws Exception {
		model.put("menu", getLabel(request, commonService));
		return nextUrl("/custom/dlmc/mainHomeDLMC");
	}
}
