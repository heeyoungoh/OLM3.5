<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--	Item 관련 관련	-->
<mapper namespace="organization_SQL">

	<select id="getMaxTeamId" resultType="String">
		SELECT
			ISNULL(MAX(TeamID)+1, 1)
		FROM
			XBOLTADM.TB_TEAM
	</select>

<select id="getProcessOrgList" resultType="java.util.HashMap">
	SELECT
		TM.TeamCode, TMT.Name
		FROM
			XBOLTADM.TB_TEAM TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TMT
				on TM.TeamID = TMT.TeamID
				AND LanguageID = #{languageID}
		WHERE
			TM.RefTeamCode in (
				SELECT 
					DimValueID
				FROM
					XBOLTADM.TB_ITEM_DIM
				WHERE 
					ItemID = #{s_itemID}
					AND TM.TeamCode != DimValueID  
	 		)   
</select>

<select id="getProcessOrgList_gridList" resultType="java.util.HashMap">
	SELECT
		Row_Number() OVER (order by TM.TeamCode, TMT.Name) AS RNUM		, 0 AS CHK 	TM.TeamCode, TMT.Name
		FROM
			XBOLTADM.TB_TEAM TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TMT
				on TM.TeamID = TMT.TeamID
				AND LanguageID = #{languageID}
		WHERE
			TM.RefTeamCode in (
				SELECT 
					DimValueID
				FROM
					XBOLTADM.TB_ITEM_DIM
				WHERE 
					ItemID = #{s_itemID}
					AND TM.TeamCode != DimValueID  
	 		)
	 	Order By TM.TeamCode, TMT.Name	   
</select>

	<select id="getOrganizationInfo" resultType="java.util.HashMap">
 			SELECT
				D.Name AS OrgName
				, C.TeamID 
				, C.TeamCode
				, E.Name AS ParentName
				, C.CompanyID
				, F.Name AS CompanyName
				, C.ItemID
				, C.TeamType
				, DIC.Name AS TeamTypeNM
				, I.ItemTypeCode
				, ISNULL(M.Name,'') + Case When ISNULL(M.NameEN,'') != '' Then '(' + ISNULL(M.NameEN,'') + ')' Else '' End AS TeamManagerNM
				, ISNULL(R.Name,'') + Case When ISNULL(R.NameEN,'') != '' Then '(' + ISNULL(R.NameEN,'') + ')' Else '' End AS RoleManagerNM
				, C.ManagerID AS TeamManagerID
				, ISNULL(XBOLTADM.fn_GetMyAbsPathForOrg(C.TeamID , #{languageID}), '') AS ParentOrgPath
			   , TIC.ChangeMgt
			   , REFTMT.Name AS RefTeamNM
			FROM 
				XBOLTADM.TB_TEAM C
				Left Outer Join XBOLTADM.TB_TEAM_TXT D on C.TeamID = D.TeamID AND D.LanguageID = #{languageID} 
				Left Outer Join XBOLTADM.TB_TEAM_TXT E on C.ParentID = E.TeamID AND E.LanguageID = #{languageID} 
				Left Outer Join XBOLTADM.TB_TEAM_TXT F on C.CompanyID = F.TeamID AND F.LanguageID = #{languageID} 
				Left Outer Join XBOLTADM.TB_DICTIONARY DIC on C.TeamType = DIC.TypeCode AND DIC.Category = 'TMTP' AND DIC.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_ITEM I on C.ItemID = I.ItemID
				Left Outer Join XBOLTADM.TB_MEMBER M on M.MemberID = C.ManagerID  
				Left Outer Join XBOLTADM.TB_MEMBER R on R.MemberID = C.RoleManagerID
				Left Outer Join XBOLTADM.TB_MEMBER TM ON TM.MemberID = I.AuthorID
				Left Outer Join XBOLTADM.TB_ITEM_CLASS TIC ON TIC.ItemClassCode = I.ClassCode
				Left Outer Join XBOLTADM.TB_TEAM REFTM ON REFTM.TeamCode = C.RefTeamCode 
				Left OUter Join XBOLTADM.TB_TEAM_TXT REFTMT ON REFTMT.TeamID = REFTM.TeamID And REFTMT.LanguageID = #{languageID}
			WHERE 
				C.TeamID = #{s_itemID}
			ORDER BY 
				F.Name ASC, E.Name ASC , D.Name ASC	
	</select>

	<select id="getOrganizationList_gridList" resultType="java.util.HashMap">
 			SELECT
 				Row_Number() OVER (order by C.TeamCode ASC) AS RNUM
 				, 0 AS CHK 
 				, ISNULL(null, 'img_job.png') AS OrgTypeImg
 				, C.TeamCode 
 				, D.Name 
 				, DIC.Name AS TeamTypeNM
 				, C.TeamID
 				, (SELECT COUNT(TeamID) FROM XBOLTADM.TB_TEAM WHERE ParentID = C.TeamID) AS PCOUNT
 				, (SELECT COUNT(TeamID) FROM XBOLTADM.TB_MEMBER WHERE TeamID = C.TeamID) AS MCOUNT
			FROM 
				XBOLTADM.TB_TEAM C
				Left Outer Join XBOLTADM.TB_TEAM_TXT D
				on C.TeamID = D.TeamID
				Left Outer Join (
					SELECT TeamID, COUNT(MemberID) AS MemberCount
					FROM XBOLTADM.TB_MEMBER 
					GROUP BY TeamID
				)TM
				on C.TeamID = TM.TeamID
				Left Outer Join XBOLTADM.TB_DICTIONARY DIC
				on C.TeamType = DIC.TypeCode AND DIC.Category = 'TMTP' AND DIC.LanguageID = #{languageID}
			WHERE
				C.ParentID = #{s_itemID} AND D.LanguageID = #{languageID} 
				AND C.Deleted != 1
				<if test="searchValue != null and searchValue != ''">
					<choose>
						<when test="searchKey.equals('Name')">
							AND D.Name LIKE '%'+#{searchValue}+'%'
						</when>
						<when test="searchKey.equals('ID')">
							AND C.TeamCode LIKE '%'+#{searchValue}+'%'
						</when>
					</choose>
				</if>
			GROUP BY
				 C.TeamCode 
 				, D.Name 
 				, C.ItemID
 				, C.TeamID
 				, MemberCount	
 				, DIC.Name
 	</select>

	<!-- 조직 매필용 -->
 	<select id="selectOrganization_gridList" resultType="java.util.HashMap">
 			SELECT
 				Row_Number() OVER (order by D.Name ASC) AS RNUM
 				, 0 AS CHK  			
				, D.Name AS OrgName
				, C.TeamID 
				, C.TeamCode
				, E.Name AS ParentName
				, C.CompanyID
				, F.Name AS CompanyName
			FROM 
				XBOLTADM.TB_TEAM C
				Left Outer Join XBOLTADM.TB_TEAM_TXT D
				on C.TeamID = D.TeamID AND D.LanguageID = #{languageID} 
				Left Outer Join XBOLTADM.TB_TEAM_TXT E
				on C.ParentID = E.TeamID AND E.LanguageID = #{languageID} 
				Left Outer Join XBOLTADM.TB_TEAM_TXT F
				on C.CompanyID = F.TeamID AND F.LanguageID = #{languageID} 
			WHERE 
				C.ParentID != #{s_itemID}
				AND TeamType = #{teamType}
			ORDER BY 
				F.Name ASC, E.Name ASC , D.Name ASC					
 	</select>

	<select id="getOrgMembers" resultType="java.util.HashMap">
			SELECT 
				TM.MemberID, TC.Name AS CountryName, (ISNULL(TM.Name,'')+' '+ISNULL(TM.Position, '')) AS UserNAME, TM.LoginID, TM.Email, ISNULL(TTC.Name, '') as CompanyID, TTT.Name AS TeamID
				, TM.Authority, TM.RetireDate  AS RetireDate
			FROM 
				XBOLTADM.TB_MEMBER TM
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_COUNTRY TC on TM.CountryID = TC.CountryID 
				
			WHERE
				TM.MemberID in (
						SELECT 
				MemberID 
			FROM 
				XBOLTADM.TB_MEMBER
			WHERE
				MemberID in (
					SELECT
						MemberID
					FROM
						XBOLTADM.TB_MY_ITEM
					WHERE
						TeamID = #{getTeamID}
				)AND MemberID Not In (
				SELECT
					MemberID
				FROM
					XBOLTADM.TB_MY_ITEM
				WHERE
					ItemID = #{s_itemID}		
				)				
			)	
		</select>

	<select id="getProcessOrgMembers" resultType="java.util.HashMap">
		SELECT 
			TM.MemberID, TC.Name AS CountryName, (ISNULL(TM.Name,'')+' '+ISNULL(TM.Position, '')) AS UserNAME, TM.LoginID, TM.Email, ISNULL(TTC.Name, '') as CompanyID, TTT.Name AS TeamID
			, TM.Authority, TM.RetireDate  AS RetireDate
		FROM 
			XBOLTADM.TB_MEMBER TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = #{languageID}
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = #{languageID}
			Left Outer Join XBOLTADM.TB_COUNTRY TC on TM.CountryID = TC.CountryID 
			
		WHERE
			TM.MemberID in (
					SELECT 
			MemberID 
		FROM 
			XBOLTADM.TB_MEMBER
		WHERE
			MemberID in (
				SELECT
					MemberID
				FROM
					XBOLTADM.TB_MY_ITEM
				WHERE
					ItemID = #{s_itemID}
			)	
		)	
	</select>
	
	<select id="getUserList" resultType="java.util.HashMap">
		SELECT 
			TM.MemberID
			, ISNULL(TM.Name,'')+ Case When ISNULL(TM.NameEN,'') != '' Then '(' + ISNULL(TM.NameEN,'') + ')' Else '' End  AS Name			
			, TM.LoginID, ISNULL(TM.Email,'') AS Email, ISNULL(TTC.Name, '') as CompanyName, ISNULL(TTT.Name,'') AS TeamName
			, TM.Authority, TM.RetireDate  AS RetireDate, ISNULL(TM.Position,'') AS Position
		FROM 
			XBOLTADM.TB_MEMBER TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = #{languageID}
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = #{languageID}
		Where UserType = 1 And TM.Active = 1
		Order by TM.Name
	</select>

	<select id="getOrgMemberList_gridList" resultType="java.util.HashMap">
			SELECT 
				Row_Number()OVER(ORDER BY TEAM.ManagerID DESC, TM.MemberID ASC) as RNUM
				, 0 AS CHK
				, TM.MemberID
				, TC.Name AS CountryName
				, ISNULL(TM.Name,'') + Case When ISNULL(TM.NameEN,'') != '' Then '(' + ISNULL(TM.NameEN,'') + ')' Else '' End AS UserNAME
				, ISNULL(TM.Position, '') AS Position
				, TM.LoginID
				, ISNULL(TM.Email, '') As Email
				, ISNULL(TTC.Name, '') as CompanyNM
				, TTT.Name AS TeamID
				, TM.Authority
				, TM.MLVL, TM.RetireDate  AS RetireDate
				, ISNULL(TDML.Name, '') AS AuthorityNm
				, ISNULL(TM.MTelNum, '') As MTelNum
				, ISNULL(TM.TelNum, '') As  TelNum
				, ISNULL(TM.EmployeeNum, '') As  EmployeeNo
				, Case When TEAM.ManagerID IS NOT NULL Then 'user.png' When TEAMROLE.RoleManagerID IS NOT NULL Then 'role_user.png' Else 'grid_user.png' END  AS OrgTypeImg
			FROM 
				XBOLTADM.TB_MEMBER TM
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_COUNTRY TC on TM.CountryID = TC.CountryID 
				Left outer Join XBOLTADM.TB_DICTIONARY TDML on TM.MLVL = TDML.TypeCode AND TDML.Category='MLVL'	AND	TDML.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_TEAM TEAM ON TEAM.TeamID = TM.TeamID And TEAM.ManagerID = TM.MemberID
				Left Outer Join XBOLTADM.TB_TEAM TEAMROLE ON TEAMROLE.TeamID = TM.TeamID And TEAMROLE.RoleManagerID = TM.MemberID
			WHERE
				TM.TeamID  = #{s_itemID}	
				<if test="ActiveMemberYN != null and ActiveMemberYN != ''">
				 AND TM.Active  = '1'
				</if>			
	</select>
	<select id="getUserList_gridList" resultType="java.util.HashMap">
			SELECT 
				Row_Number()OVER(ORDER BY TM.MemberID ASC ) as RNUM
				, 0 AS CHK
				, ISNULL(null, 'grid_user.png')  AS OrgTypeImg
				, TM.MemberID
				, TC.Name AS CountryName
				, ISNULL(TM.Name,'') AS UserNAME
				, ISNULL(TM.Position, '') AS Position
				, TM.LoginID, TM.Email
				, ISNULL(TTC.Name, '') as CompanyID
				, TTT.Name AS TeamID
				, TM.Authority, TM.RetireDate  AS RetireDate
				, ISNULL(TDML.Name, '') AS AuthorityNm
			FROM 
				XBOLTADM.TB_MEMBER TM
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = #{languageID}
				Left Outer Join XBOLTADM.TB_COUNTRY TC on TM.CountryID = TC.CountryID 
				Left outer Join XBOLTADM.TB_DICTIONARY TDML
					on TM.MLVL = TDML.TypeCode 
					AND TDML.Category='MLVL'
					AND	TDML.LanguageID = #{languageID}
			WHERE
				TM.MemberID in (
						SELECT 
				MemberID 
			FROM 
				XBOLTADM.TB_MEMBER
			WHERE
				MemberID in (
					SELECT
						MemberID
					FROM
						XBOLTADM.TB_MY_ITEM
					WHERE
						TeamID in (
							SELECT
								TeamID
							From 
								XBOLTADM.TB_TEAM
							WHERE
								RefTeamCode = #{s_itemID}		
						)
				)					
			)			
	</select>
	
		<select id="getProcessUserList_gridList" resultType="java.util.HashMap">
		SELECT 
			Row_Number()OVER(ORDER BY TM.MemberID ASC ) as RNUM
			, CHK AS 0
			, TM.MemberID
			, TC.Name AS CountryName
			, (ISNULL(TM.Name,'')+' '+ISNULL(TM.Position, '')) AS UserNAME
			, TM.LoginID
			, TM.Email
			, ISNULL(TTC.Name, '') as CompanyID
			, TTT.Name AS TeamID
			, TM.Authority
			, CASE TM.Authority WHEN '0' THEN 'Viewer' WHEN '1' THEN 'Admin' ELSE '' END AuthorityNm
			, TM.RetireDate  AS RetireDate
		FROM 
			XBOLTADM.TB_MEMBER TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTC on TM.CompanyID = TTC.TeamID AND TTC.LanguageID = '1042'
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTT on TM.TeamID = TTT.TeamID AND TTT.LanguageID = '1042'
			Left Outer Join XBOLTADM.TB_COUNTRY TC on TM.CountryID = TC.CountryID 
		WHERE
			TM.MemberID in (
					SELECT 
			MemberID 
		FROM 
			XBOLTADM.TB_MEMBER
		WHERE
			MemberID in (
				SELECT
					MemberID
				FROM
					XBOLTADM.TB_MY_ITEM
				WHERE
					ItemID in (
						SELECT FromItemID FROM XBOLTADM.TB_ITEM
						WHERE ToItemID = #{s_itemID}	AND CategoryCode = 'CN'
					)
			)	
		)		
	</select>
	
	<select id="getMyItemList_gridList" resultType="java.util.HashMap">
		SELECT 
			Row_Number()OVER(ORDER BY TI.ClassCode ASC, TIA.PlainText ASC) as RNUM
			, 0 AS CHK
			, TI.ItemID
			, ISNULL(TIS.SCOUNT, 0) AS SCOUNT
			, TIA.PlainText as ItemName
			, TD.Name as ClassName
			, ISNULL(TT.Name, '') as TeamName
			, TOT.Name as OwnerTeamName
			, TM.Name
			, Convert(nvarchar(20),TI.LastUpdated, 111) AS LastUpdated
			, TI.Version
			, TI.Identifier
			, TIF.PlainText as ProcessInfo
		FROM
			XBOLTADM.TB_ITEM TI
			Left outer join (
				SELECT FromItemID, ISNULL(COUNT(DISTINCT ToItemID), 0) AS SCOUNT 
				FROM XBOLTADM.TB_ITEM 
				WHERE Deleted != '1'
				GROUP BY FromItemID 
				) TIS on TIS.FromItemID = TI.ItemID
			Left outer join XBOLTADM.TB_DICTIONARY TD on TI.ClassCode = TD.TypeCode AND TD.LanguageID = #{languageID}
			Left outer join XBOLTADM.TB_TEAM_TXT TT on TI.CompanyID = TT.TeamID  AND TT.LanguageID = #{languageID}
			Left outer join XBOLTADM.TB_TEAM_TXT TOT on TI.OwnerTeamID = TOT.TeamID AND TOT.LanguageID = #{languageID}
			Left outer join XBOLTADM.TB_MEMBER TM on TI.AuthorID = TM.MemberID
			Left outer join XBOLTADM.TB_ITEM_ATTR TIA on TI.ItemID = TIA.ItemID AND TIA.AttrTypeCode = 'AT00001' AND TIA.LanguageID = #{languageID}
			Left outer join XBOLTADM.TB_ITEM_ATTR TIF on TI.ItemID = TIF.ItemID AND TIF.AttrTypeCode = 'AT00003' AND TIF.LanguageID = #{languageID}
		WHERE 
			TI.ItemID in (
				Select ItemID From XBOLTADM.TB_MY_ITEM WHERE MemberID = #{s_itemID}
		 	)
	 		AND TI.Deleted != '1'
	 		or
	 		TI.ItemID in (
				Select ItemID FROM XBOLTADM.TB_ITEM
				Where AuthorID =  #{s_itemID}
			 	AND Deleted != '1'
	 		)
		order by
			TI.ClassCode ASC, TIA.PlainText ASC		
	</select>
	
	<delete id="delDimUser">
		DELETE
		FROM
			XBOLTADM.TB_MY_ITEM
		WHERE
			ItemID = #{s_itemID}
			AND MemberID = #{MemberID}
	</delete>

	<insert id="addDimUser">
		INSERT INTO
			XBOLTADM.TB_MY_ITEM	(
				MemberID
				, ItemID
				, ItemTypeCode
		)	
		VALUES(
				#{MemberID}
				,#{s_itemID}
				, (SELECT ItemTypeCode FROM XBOLTADM.TB_ITEM WHERE ItemID = #{s_itemID})
		)
	</insert>
	
	<insert id="addTeam">
		INSERT INTO
			XBOLTADM.TB_TEAM(
				TeamID ,TeamCode ,ParentID ,CompanyID ,TeamType, ItemID
				,CreationTime ,LastUpdated
			)VALUES(
				#{TeamID} , #{TeamCode} , #{parentID} , #{companyID}, #{TeamType}, #{ItemID}
				,getDate() ,getDate()
			)
	</insert>

	<insert id="addTeamText">
		INSERT INTO
			XBOLTADM.TB_TEAM_TXT(
				TeamID ,LanguageID ,TeamCode ,Name
			)VALUES(
				#{TeamID} ,#{languageID} ,#{TeamCode} , #{TeamName} 
			)	
	</insert>
	
	<update id="updateTeam">
		UPDATE
			XBOLTADM.TB_TEAM
		SET
			TeamID = TeamID
			<if test="TeamCode != null and TeamCode != ''">
				, TeamCode = #{TeamCode}
			</if>
			<if test="companyID != null and companyID != ''">
				, companyID = #{companyID}
			</if>
			<if test="TeamType != null and TeamType != ''">
				, TeamType = #{TeamType}
			</if>
			<if test="ParentID != null and ParentID != ''">
				, ParentID = #{ParentID}
			</if>
				, ItemID = #{ItemID}
			<if test="ManagerID != null and ManagerID != ''">
				, ManagerID = #{ManagerID}
			</if>
			<if test="RoleManagerID != null and RoleManagerID != ''">
				, RoleManagerID = #{RoleManagerID}
			</if>
		WHERE
			TeamID = #{TeamID}
	</update>
	
	<update id="updateTeamText">
		UPDATE
			XBOLTADM.TB_TEAM_TXT
		SET
			TeamID = TeamID
			<if test="TeamName != null and TeamName != ''">
				, Name = #{TeamName}
			</if>
			<if test="TeamCode != null and TeamCode != ''">
				, TeamCode = #{TeamCode}
			</if>
		WHERE
			TeamID = #{TeamID}
			AND LanguageID = #{languageID}
	</update>
		
	<select id="getAttrInfo" resultType="java.util.HashMap">
		SELECT Distinct
	   		T1.AttrTypeCode
      		,T1.IsComLang 
      	FROM XBOLTADM.TB_ATTR_TYPE T1,
  			XBOLTADM.TB_ATTR_TYPE_ALLOCATION T2
  		WHERE
 			T2.ItemClassCode = 'CNL1201'
  			AND T1.AttrTypeCode = T2.AttrTypeCode
  		ORDER BY T1.AttrTypeCode
	</select>	
	
	
	<select id="getFromToItemTypeCode" resultType="java.util.HashMap">
		SELECT 
      		 FromItemTypeCode
      		, ToItemTypeCode
  		FROM XBOLTADM.TB_ITEM_TYPE
  		WHERE ItemTypeCode = #{varFilter}
	</select>
	
	<select id="getConItemTypeCode" resultType="String">
		SELECT ItemTypeCode
		FROM XBOLTADM.TB_ITEM_TYPE
		WHERE 
			ToItemTypeCode = FromItemTypeCode AND Category = 'ST'
			AND ToItemTypeCode = #{ItemTypeCode}
	</select>
	
	<select id="getCountConItem" resultType="String">
		SELECT Count(ItemID) As CNT
		FROM XBOLTADM.TB_ITEM
		WHERE 
			ItemTypeCode = #{ItemTypeCode}
			AND FromItemID = #{FromItemID}
			AND ToItemID = #{ToItemID}
			<if test='deleted != null and deleted != "" '>
			AND Deleted != #{deleted}
			</if>
	</select>
	
	<select id="getItemIdANdName" resultType="String">
		SELECT 
      		(T1.Identifier + ' : ' + T2.PlainText) As Name
      	FROM XBOLTADM.TB_ITEM T1,
  			XBOLTADM.TB_ITEM_ATTR T2
  		where T1.ItemID = #{ItemID}
  		and T1.ItemID = T2.ItemID 
  		and T2.AttrTypeCode = 'AT00001'
  		and T2.LanguageID = #{LanguageID}
	</select>
	
	<select id="insertHRTeamInfo" parameterType="java.util.HashMap" statementType="CALLABLE">
		{ CALL #{procedureName} }
	</select>
	
	<delete id="delTeam">
		DELETE
		FROM
			XBOLTADM.TB_TEAM_TXT
		WHERE
			TeamID = #{TeamID}	
			
		DELETE
		FROM
			XBOLTADM.TB_TEAM
		WHERE
			TeamID = #{TeamID}
	</delete>
	
	<select id="getPathOrg" resultType="String">
		SELECT
			CASE When XBOLTADM.fn_GetMyAbsPathForList(TI.ItemID,#{languageID}) != ''
			Then CONVERT(NVARCHAR(MAX), XBOLTADM.fn_GetMyAbsPathForList(TI.ItemID,#{languageID}) + '/' + CONVERT(NVARCHAR(MAX), TIA2.PlainText))
			ELSE TIA2.PlainText END
			AS Path
		FROM
			XBOLTADM.TB_ITEM TI
			Left Outer Join XBOLTADM.TB_ITEM_ATTR TIA2 on  TI.ItemID = TIA2.ItemID AND TIA2.AttrTypeCode = 'AT00001' AND TIA2.LanguageID = #{languageID}	
		WHERE TI.ItemID = #{ItemID}	
	</select>
	
	<select id="getItemIdFromTeam" resultType="String">
	    Select ItemID 
		 From XBOLTADM.TB_TEAM
		 Where TeamID = (Select TeamID From XBOLTADM.TB_MEMBER Where LoginID = #{loginID})
    </select>
    
    <select id="getTeamItemAuthorList" resultType="java.util.HashMap">
	    SELECT distinct AuthorID
			, Name, NameEN    
			, ISNULL(TM.Name,'') + Case When ISNULL(TM.NameEN,'') != '' Then '(' + ISNULL(TM.NameEN,'') + ')' Else '' End AS AuthorName
		FROM XBOLTADM.TB_Item ITM
		Inner Join XBOLTADM.TB_MEMBER TM ON TM.MemberID = ITM.AuthorID and TM.TeamID = #{teamID}
	</select>
	
	<select id="getTeamName" resultType="String">		
		SELECT Name
		  FROM XBOLTADM.TB_TEAM_TXT
		 WHERE TeamID = #{teamID} AND LanguageID = #{languageID}	
	</select>
	
	<select id="getTeamCode" resultType="String">		
		SELECT TeamCode FROM XBOLTADM.TB_TEAM WHERE TeamID = #{teamID} 
	</select>
	
	<select id="getCompanyCode" resultType="String">
		SELECT TeamCode FROM XBOLTADM.TB_TEAM WHERE TeamID = #{companyID}
	</select>
	
	<select id="getChildOrgList" resultType="java.util.HashMap">
			SELECT
			C.TeamCode , D.Name , ISNULL(C.ItemID, 0) AS ItemID
		FROM 
			XBOLTADM.TB_TEAM C, XBOLTADM.TB_TEAM_TXT D
		WHERE 
			C.TeamID = D.TeamID
			AND C.ParentID = #{s_itemID} AND D.LanguageID = #{languageID}
			AND C.Deleted != 1
 	</select>
 	
  <select id="getTeamList" resultType="java.util.HashMap">
	SELECT 
		TT.TeamID , TTT.Name
	FROM
		XBOLTADM.TB_TEAM TT
		Left Outer Join XBOLTADM.TB_TEAM_TXT TTT 
			on TT.TeamID  = TTT.TeamID AND TTT.LanguageID = #{languageID}
	WHERE
		TT.TeamType = #{TeamType}
	Order by Name

   </select>	
	
	<select id="searchTeamPop" resultType="java.util.HashMap">
		SELECT 
			TM.TeamID
			, XBOLTADM.fn_GetMyAbsPathForOrg(TM.TeamID , #{languageID}) AS ParentName
			, TTT.Name AS TeamName
		FROM
			XBOLTADM.TB_TEAM TM
			Left Outer Join XBOLTADM.TB_TEAM_TXT TTT On TM.TeamID = TTT.TeamID  AND TTT.LanguageID = #{languageID}
		WHERE
			<if test='!"N".equals(teamTypeYN)'>
			TM.TeamType = '4' AND 
			</if>
			TTT.Name Like '%'+#{Name}+'%'
		ORDER BY Name
	</select>		
	
	<select id="teamChangeLogList_gridList" resultType="java.util.HashMap">
		SELECT 
		Row_Number()OVER(ORDER BY TL.Seq DESC ) as RNUM
		, TT.TeamID
		, TT.TeamCode
		, TTT.Name AS TeamNM
		, CASE WHEN TL.ChangeType = 'NMC' THEN TL.Comment ELSE '-' END As ChangeDesc
		, TL.ChangeType
		, TD.Name AS ChangeTypeNM
		, ISNULL(CONVERT(VARCHAR, TL.CreationTime, 111),'-') AS CreationTime
		, CASE WHEN TL.Status = '01' THEN 'Waiting' WHEN TL.Status = '02' THEN 'Closed' ELSE '-' END AS Status
		, ISNULL(CONVERT(VARCHAR, TL.LastUpdated, 111),'-') AS LastUpdated
		, ISNULL(TM.Name,'-') As LastUser
		, TL.Seq
		FROM XBOLTADM.TW_TEAM_LOG TL
		LEFT OUTER JOIN XBOLTADM.TB_TEAM TT ON TT.TeamID = TL.TeamID
		LEFT OUTER JOIN XBOLTADM.TB_TEAM_TXT TTT ON TTT.TeamID = TL.TeamID and TTT.LanguageID =#{languageID}
		LEFT OUTER JOIN XBOLTADM.TB_DICTIONARY TD ON TD.TypeCode = TL.ChangeType and TD.LanguageID =#{languageID} and TD.Category = 'TEAMCNGTP'
		LEFT OUTER JOIN XBOLTADM.TB_MEMBER TM ON TM.MemberID = TL.LastUser
		WHERE 1 =1
		<if test="scStartDt != null and scStartDt != '' and scEndDt != null and scEndDt != ''">
			AND CONVERT(VARCHAR, TL.CreationTime, 112) BETWEEN #{scStartDt} AND #{scEndDt}
		</if>
		<if test="status != null and status != ''">
			AND TL.Status = #{status}
		</if>
		<if test="changeType != null and changeType != ''">
			AND TL.ChangeType = #{changeType}
		</if>
	</select>
	
	<update id="updateProcessLog">
		UPDATE	
			XBOLTADM.TW_TEAM_LOG
		SET	
			Status = '02',
			<!-- Comment = #{comment}, -->
			LastUser = #{userID},
			LastUpdated = getDate()
		WHERE Seq = #{seq}
	</update>
	
	<select id="insertTeamChangeLog" parameterType="java.util.HashMap" statementType="CALLABLE">
		{ CALL #{procedureName} }
	</select>
	
	<select id="getTeamIDFromTeamCode" resultType="String" >
		Select TeamID From XBOLTADM.TB_TEAM Where TeamCode = #{teamCode}
	</select>
	
	<select id="getTeamCNT" resultType="String" >
		Select COUNT(*) From XBOLTADM.TB_TEAM Where TeamID = #{teamID}
	</select>
		
	<select id="getTeamRoleMNID" resultType="String" >
		Select RoleManagerID From XBOLTADM.TB_TEAM Where TeamID = #{teamID}
	</select>
	
</mapper>